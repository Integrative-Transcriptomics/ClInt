params.qc = "fastp" // Available Options: fastp, TrimGalore, FastQC (requires own trimming)
params.mapping = "star" // Available Options: hisat2, star
params.assembly = ["Trinity","rnaspades"] // Available Options (choose multiple): STAR, Trinity, RNAspades,
params.quantification = "featureCounts" // Available Options: featureCounts (none other available at the moment)

params.trinity_type="guided" // Available options: guided, denovo

// Whether or not to publish directories to allow them to be viewed (mainly for debugging files)
PUBLISH_DIRECTORIES = 0

// Set some global variables which require linux-based commands. Can also set manually if these are known prior
params {
    USER_ID = "id -u".execute().text.trim()     // current user ID needed for mapping directories
    GROUP_ID = "id -g".execute().text.trim()    // current group ID needed for mapping directories

    input_dir       = '';                     // (Top-level) folder in which reads are kept
    output_dir      = "./workflow_output";   // Where to publish files i.e VCFs, CSV's
    reference_file  = '';                // The reference genome 
    gff_file        = '';                      // The annotation for the reference genome

    num_threads     = 4; 
    max_memory      = '50.GB';

    genome_index    = '';

    paired          = false;                 // Whether paired data is given
    strandedness    = "forward"
    metadata        = 'clint_metadata.csv' // The file containig sampleID and filepaths for the reads
    r1_pattern      = "_R1"                 // Pattern for Read1 files (for paired-end)
    r2_pattern      = "_R2"                 // Pattern for Read2 files (for paired-end)
}

// https://github.com/nextflow-io/nextflow/issues/2786
profiles {
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.runOptions = '-B $SINGULARITY_TMPDIR:/tmp' // -B $SINGULARITYENV_TMPDIR:/tmp
        singularity.envWhitelist = ['SINGULARITY_TMPDIR', 'APPTAINERENV_TMPDIR', 'SINGULARITYENV_TMPDIR']
        executor {
            name = 'slurm'
        }

        process {
            // Labels to take into consideration:
            // storeDir, queue ...
            // TODO: Implement dynamic directives with e.g retries and so on
            // TODO: Does SLURM do per process or per process instance
            container = 'file://clint.sif'
            cpus = 4
            // executor = 'slurm'
            withLabel: preprocess {
                // maxForks = 7 // If not SLURM executor
                queue = 'short'
                memory = 10.GB
                cpus = 6
            }
            withLabel: mapping {
                // maxForks = 8 // If not SLURM executor
                queue = 'short'
                memory = 20.GB
                cpus = 10
            }
            withLabel: assembly {
                // maxForks = 6 // If not SLURM executor
                queue = 'long'
                memory = 50.GB
                cpus = 12
            }
            withLabel: variant_calling {
                // maxForks = 8 // If not SLURM executor
                errorStrategy = 'retry' // For gatk-related processes
                maxRetries = 3          // For gatk-related processes

                queue = 'long'
                memory = 20.GB
                cpus = 4
            }
            withName: STAR_BUILD {
                cpus = 20
                memory = 50.GB
            }
        }
    }

    docker {
        // Causes errors when doing 'publishDir' related stuff due to permissions
        docker.enabled = true
        docker.temp = 'auto'

        process {
            container = 'file://clint.sif'
            cpus = 4 // Default #cpus to use
            withName: HISAT2 {
                cpus = 6
            }
        }
    }
}

